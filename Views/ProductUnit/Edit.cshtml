@using Vereyon.Web
@using xtbdEcommerceAdminPanel.Utility
@model xtbdEcommerceAdminPanel.Models.RequestDto.ProductUnitDto
@{
    ViewBag.Title = "Product Unit Edit";
}
<head>
    <style>
        label.error {
            color: red;
        }
        .error {
            color: red;
        }

        .column {
            float: left;
            width: 15%;
            padding: 5px;
            border-radius: 25px;
            margin-right: 8px;
        }
    </style>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
</head>

<div class="main-content container-fluid">
    <div class="page-title mb-2">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Product Unit Setup</h3>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class='breadcrumb-header'>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Product Unit</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Edit Product Unit</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>


    <section id="basic-horizontal-layouts">
        <div class="row match-height">
            <div class="col-md-1 col-12"></div>
            <div class="col-md-10 col-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Edit Product Details</h4>
                        <a class="btn btn-primary mr-1 mb-1" style="float: right" href="@Url.Action("Index","ProductUnit")">Back to List</a>
                    </div>
                    <div class="card-content">
                        <div class="card-body">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "AddProductDetailsform", @enctype = "multipart/form-data", @class = "smart-form", @novalidate = "novalidate" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.ProductName)
                                @Html.HiddenFor(model => model.CreatedBy)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class='@TempData["Class"]' id="flashMessage" role="alert">@TempData["Message"]</div>

                                <div class="row">
                                    <div class="col-md-6 col-12">
                                        <label>Product Name</label>
                                        <div class="form-group">
                                            @Html.DropDownListFor(x => x.ProductId, new SelectList(ViewBag.Products, "Id", "Name"), "----Select Product----", new { @class = "form-control", id = "ProductId" })
                                            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "error" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Stock Keeping Unit</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.StockKeepingUnit, new { placeholder = "Enter product Stock Keeping Unit" ,@class= "form-control" })
                                            @Html.ValidationMessageFor(model => model.StockKeepingUnit, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Carton Size</label>
                                        <div class="form-group">                                           
                                            @Html.TextBoxFor(model => model.CartonSize, new { placeholder = "Enter carton size", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CartonSize, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Carton Size Unit</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.CartonSizeUnit, new { placeholder = "Enter carton size unit", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CartonSizeUnit, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Maximum Retail Price</label>
                                        <div class="form-group">                                            
                                            @Html.TextBoxFor(model => model.MaximumRetailPrice, new { placeholder = "Enter maximum retail price", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.MaximumRetailPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Distributor Price Per Carton</label>
                                        <div class="form-group">
                                            
                                            @Html.TextBoxFor(model => model.DistributorPricePerCarton, new { placeholder = "Enter Distributor Price Per Carton", @class = "form-control" })
                                            <br />
                                            @Html.ValidationMessageFor(model => model.DistributorPricePerCarton, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Trade Price Per Carton</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.TradePricePerCarton, new { placeholder = "Enter Trade Price Per Carton", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TradePricePerCarton, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Effective Date</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.EffectiveDate, new { placeholder = "Enter effective date", @readonly = "readonly", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Available stock</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.AvailableStock, new { placeholder = "Enter Available stock", @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <label>Barcode</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.Barcode, new { placeholder = "Enter barcode", @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12"></div>
                                        <div class="col-md-6 col-12">
                                            <div class='form-check'>
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(model => model.IsActive, new { id = "IsActive", @class = "form-check-input" })
                                                    <i></i>Is Active?
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12 col-12">
                                                <section class="col col-5">
                                                    <label>Product Images</label>
                                                </section>
                                                <div class="form-group">
                                                    <div>
                                                        <section class="col col-6">
                                                            <div class="input input-file">
                                                                <input class="form-control" name="ProductImagesForm[0].ImageLocation" id="ProductImages[0].ImageLocation" type="file" onchange="readFirstImage(this);">
                                                            </div>
                                                        </section>
                                                    </div>
                                                    <div style="margin-top: 10px">
                                                        <section class="col col-6">
                                                            <div class="input input-file">
                                                                <input class="form-control" name="ProductImagesForm[1].ImageLocation" id="ProductImages[1].ImageLocation" type="file" onchange="readSecondImage(this);">
                                                            </div>
                                                        </section>
                                                    </div>
                                                    <div style="margin-top: 10px">
                                                        <section class="col col-6">
                                                            <div class="input input-file">
                                                                <input class="form-control" name="ProductImagesForm[2].ImageLocation" id="ProductImages[2].ImageLocation" type="file" onchange="readLastImage(this);">
                                                            </div>
                                                        </section>
                                                    </div>
                                                    <div style="margin-top: 10px">
                                                        <section class="col col-6">
                                                            <div class="input input-file">
                                                                <input class="form-control" name="ProductImagesForm[3].ImageLocation" id="ProductImages[2].ImageLocation" type="file" onchange="readFourImage(this);">
                                                            </div>
                                                        </section>
                                                    </div>
                                                    <div style="margin-top: 10px">
                                                        <section class="col col-6">
                                                            <div class="input input-file">
                                                                <input class="form-control" name="ProductImagesForm[4].ImageLocation" id="ProductImages[2].ImageLocation" type="file" onchange="readFiveImage(this);">
                                                            </div>
                                                        </section>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row">
                                            <div class="col-md-12 col-12">

                                                <div class="column">
                                                    @if (Model.ProductImages[0].ImageUrl != null)
                                                    {
                                                        @Html.HiddenFor(model => model.ProductImages[0].ImageUrl)
                                                        <img id="fImg" src="@BaseUrl.imageUrl\@Model.ProductImages[0].ImageUrl" alt="Product image" style="width: 100%">
                                                    }
                                                    else
                                                    {
                                                        <img id="fImg" src="#" alt="Product image" style="width: 100%">
                                                    }

                                                </div>
                                                <div class="column">
                                                    @if (Model.ProductImages[1].ImageUrl != null)
                                                    {
                                                        @Html.HiddenFor(model => model.ProductImages[1].ImageUrl)
                                                        <img id="SImg" src="@BaseUrl.imageUrl\@Model.ProductImages[1].ImageUrl" alt="Product image" style="width: 100%">
                                                    }
                                                    else
                                                    {
                                                        <img id="SImg" src="#" alt="Product image" style="width: 100%">
                                                    }


                                                </div>
                                                <div class="column">
                                                    @if (Model.ProductImages[2].ImageUrl != null)
                                                    {
                                                        @Html.HiddenFor(model => model.ProductImages[2].ImageUrl)
                                                        <img id="TImg" src="@BaseUrl.imageUrl\@Model.ProductImages[2].ImageUrl" alt="Product image" style="width: 100%">
                                                    }
                                                    else
                                                    {
                                                        <img id="TImg" src="#" alt="Product image" style="width: 100%">
                                                    }

                                                </div>
                                                <div class="column">
                                                    @if (Model.ProductImages[3].ImageUrl != null)
                                                    {
                                                        @Html.HiddenFor(model => model.ProductImages[3].ImageUrl)
                                                        <img id="fourImg" src="@BaseUrl.imageUrl\@Model.ProductImages[3].ImageUrl" alt="Product image" style="width: 100%">
                                                    }
                                                    else
                                                    {
                                                        <img id="fourImg" src="#" alt="Product image" style="width: 100%">
                                                    }


                                                </div>
                                                <div class="column">
                                                    @if (Model.ProductImages[4].ImageUrl != null)
                                                    {
                                                        @Html.HiddenFor(model => model.ProductImages[4].ImageUrl)
                                                        <img id="fiveImg" src="@BaseUrl.imageUrl\@Model.ProductImages[4].ImageUrl" alt="Product image" style="width: 100%">
                                                    }
                                                    else
                                                    {
                                                        <img id="fiveImg" src="#" alt="Product image" style="width: 100%">
                                                    }
                                                </div>

                                            </div>
                                        </div>

                                        <div class="col-12 d-flex justify-content-end">
                                            <button type="submit" id="AddButton" class="btn btn-primary">Update</button>
                                        </div>
                                    </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</div>
@section scripts{
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
    <script>

        function readFirstImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#fImg').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }


        function readSecondImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#SImg').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function readLastImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#TImg').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function readFourImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#fourImg').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function readFiveImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#fiveImg').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        $(document).ready(function () {
            $('#flashMessage').delay(3000).fadeOut('slow');
            $("#EffectiveDate").datepicker();
            $("#ProductId").select2({
                tags: true
            });

            $('#ProductId').change(function () {
                var selectedProductName = $('#ProductId option:selected').text();
                $('#ProductName').val(selectedProductName);

            });
            $('#ProductId').trigger('change');
        });
    </script>
}
